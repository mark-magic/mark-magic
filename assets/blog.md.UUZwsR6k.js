import{_ as i}from"./chunks/joplin-webclipper.ijpMEC_x.js";import{_ as s,o as a,c as e,R as l}from"./chunks/framework.TR9yfmzU.js";const t="/assets/joplin-blog-demo.0A9pB4BI.png",u=JSON.parse('{"title":"笔记 => 博客","description":"","frontmatter":{},"headers":[],"relativePath":"blog.md","filePath":"blog.md"}'),n={name:"blog.md"},p=l('<h1 id="笔记-博客" tabindex="-1">笔记 =&gt; 博客 <a class="header-anchor" href="#笔记-博客" aria-label="Permalink to &quot;笔记 =&gt; 博客&quot;">​</a></h1><blockquote><p><a href="./book.html#必要条件">必要条件</a></p></blockquote><h2 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h2><blockquote><p>下面使用 <a href="https://joplinapp.org/" target="_blank" rel="noreferrer">joplin</a> 作为笔记工具，<a href="https://hexo.io/" target="_blank" rel="noreferrer">hexo</a> 作为博客进行说明。但这两者都可以替换，例如笔记的来源可以替换为 obsidian，输出的博客则可以替换为 hugo。</p></blockquote><ol><li>首先，确保 joplin 已经开启了 web clipper。 <img src="'+i+'" alt="joplin-webclipper"></li><li>其次，需要一个 hexo 项目，如果已有，请参考 <a href="#连接-joplin-到现有的-hexo-博客">连接 joplin 到现有的 hexo 博客</a>，否则继续下一步。</li></ol><h2 id="从零开始创建-hexo-博客" tabindex="-1">从零开始创建 hexo 博客 <a class="header-anchor" href="#从零开始创建-hexo-博客" aria-label="Permalink to &quot;从零开始创建 hexo 博客&quot;">​</a></h2><p>如果你还没有 hexo blog，那么可以直接使用模版创建来减少配置。</p><ol><li>在 github 上使用模版项目 <a href="https://github.com/mark-magic/joplin-hexo-demo" target="_blank" rel="noreferrer">joplin-hexo-demo</a> 创建一个新的项目，操作路径 <strong>Use this template &gt; Create a new repository</strong>。如果还没有 github 账户，请 <a href="https://github.com/signup" target="_blank" rel="noreferrer">注册</a> 一个。</li><li>使用 git 在命令行克隆你的项目到本地 <code>git clone https://github.com/&lt;username&gt;/&lt;repo&gt;.git</code></li><li>修改 mark-magic.config.yaml 配置文件中的 <code>baseUrl</code> 和 <code>token</code> 为 joplin 设置中的值</li><li>在 joplin 中为你希望发布的笔记添加 <code>blog</code> 标签</li><li>运行命令 <code>npx mark-magic &amp;&amp; npx hexo server</code>，打开 <a href="http://localhost:4000/joplin-hexo-demo/" target="_blank" rel="noreferrer">http://localhost:4000/joplin-hexo-demo/</a> 可以看到你的笔记了 <img src="'+t+`" alt="joplin-blog-demo"></li><li>现在修改 _config.yml 配置文件中 <code>root</code> 的值为你克隆的 github <code>&lt;repo&gt;</code> 的名字</li><li>在 github 的存储库设置中的 <strong>Pages</strong> 菜单项下，选择 <strong>Build and deployment &gt; Source</strong> 中的 <strong>GitHub Actions</strong>。</li><li>最后运行 <code>npm run commit</code> 推送所有要发布的笔记内容。</li></ol><p>等待 GitHub Actions 完成，可以在 <code>https://github.com/&lt;username&gt;/&lt;repo&gt;/actions</code> 查看进度。</p><p>一切完成后，应该可以看到站点被部署在 <code>https://&lt;username&gt;.github.io/&lt;repo&gt;/</code> 或 <code>https://&lt;custom-domain&gt;/</code>，具体取决于设置。</p><blockquote><p>示例项目可以在 <a href="https://github.com/mark-magic/joplin-hexo-demo" target="_blank" rel="noreferrer">https://github.com/mark-magic/joplin-hexo-demo</a> 看到。</p></blockquote><h2 id="连接-joplin-到现有的-hexo-博客" tabindex="-1">连接 joplin 到现有的 hexo 博客 <a class="header-anchor" href="#连接-joplin-到现有的-hexo-博客" aria-label="Permalink to &quot;连接 joplin 到现有的 hexo 博客&quot;">​</a></h2><ol><li><p>安装依赖 <code>npm i -D @mark-magic/cli @mark-magic/plugin-joplin @mark-magic/plugin-hexo</code></p></li><li><p>添加配置 <code>mark-magic.config.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mark-magic.config.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tasks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">blog</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@mark-magic/plugin-joplin&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 输入插件，从 joplin 笔记中读取数据</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        baseUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://localhost:27583&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # joplin web clipper service 的地址，一般是 http://localhost:41184，这里演示使用了开发时的 http://localhost:27583</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;5bcfa49330788dd68efea27a0a133d2df24df68c3fd78731eaa9914ef34811a34a782233025ed8a651677ec303de6a04e54b57a27d48898ff043fd812d8e0b31&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # joplin web clipper service 的 token</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">blog</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 根据标签过滤笔记</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@mark-magic/plugin-hexo&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 输出插件，生成 hexo 需要的文件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # hexo 项目的根目录</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/joplin-hexo-demo/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 部署时的 baseUrl，默认部署在域的根路径，应该与 hexo _config.yml 中的 root 配置保持一致</span></span></code></pre></div></li><li><p>修改 hexo 的配置 <code>_config.yml</code>，如果包含</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">permalink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:abbrlink/</span></span></code></pre></div></li><li><p>从 joplin 读取笔记生成 hexo blog 所需要的文件</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mark-magic</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 这会清空 source/_posts 和 source/resources 目录，如果有什么文件请备份</span></span></code></pre></div></li></ol><p>完成后你可以在 <code>source/_posts</code> 和 <code>source/resources</code> 目录看到生成的文件，现在可以继续使用 hexo 构建和发布了。</p>`,14),o=[p];function h(r,k,c,d,g,m){return a(),e("div",null,o)}const y=s(n,[["render",h]]);export{u as __pageData,y as default};
