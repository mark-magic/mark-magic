import{_ as e,o as t,c as o,R as a,a1 as i}from"./chunks/framework.TR9yfmzU.js";const p=JSON.parse('{"title":"mark-magic","description":"","frontmatter":{},"headers":[],"relativePath":"en/index.md","filePath":"en/index.md"}'),n={name:"en/index.md"},r=a('<h1 id="mark-magic" tabindex="-1">mark-magic <a class="header-anchor" href="#mark-magic" aria-label="Permalink to &quot;mark-magic&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>A data connection and transformation tool based on Markdown, addressing data conversion between different tools and facilitating coordination between certain commonly used tools.</p><p>Some use cases:</p><ol><li>Publishing notes online, such as generating content from Joplin note tool for a Hexo blog to publish on the web <a href="https://blog.rxliuli.com/" target="_blank" rel="noreferrer">here</a>.</li><li>Publishing a novel online, such as generating a novel website from local Markdown files for publication <a href="https://tts.liuli.moe/" target="_blank" rel="noreferrer">here</a>.</li><li>Packaging a novel into an EPUB file, such as packaging &quot;To the Stars&quot; into an EPUB for easy offline reading <a href="https://github.com/liuli-moe/to-the-stars/releases" target="_blank" rel="noreferrer">here</a>.</li></ol><p>Some previous community use cases:</p><ol><li>Joplin =&gt; Hugo to generate a blog.</li><li>Joplin =&gt; Jekyll to generate a blog.</li><li>Possibly others...</li></ol><h2 id="why-not-use-existing-tools" tabindex="-1">Why not use existing tools <a class="header-anchor" href="#why-not-use-existing-tools" aria-label="Permalink to &quot;Why not use existing tools&quot;">​</a></h2><p>We have already used many tools for different tasks, but they are all based on Markdown, such as:</p><ul><li>Using Joplin to take notes.</li><li>Using Hexo to write blogs.</li><li>Using Vitepress to generate documentation websites.</li><li>Using Docusaurus to generate SEO-friendly novel websites.</li><li>Using Pandoc to generate EPUBs.</li></ul><p>What really bothers us is when using Docusaurus, each novel requires a lot of configuration, which is very annoying. Therefore, we hope to have a better out-of-the-box solution.</p><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Next, we will provide two examples:</p><ol><li><a href="./book.html">Generating a website and EPUB for novels</a></li><li><a href="./blog.html">Generating a blog from notes</a></li></ol><p>Thanks to ChatGPT, mark-magic now has a mascot.</p><p><img src="'+i+'" alt="cover"></p>',16),l=[r];function s(h,c,d,g,u,m){return t(),o("div",null,l)}const b=e(n,[["render",s]]);export{p as __pageData,b as default};
