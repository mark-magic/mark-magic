import{_ as e,c as t,o,R as a,a1 as i}from"./chunks/framework.ZUvglspe.js";const f=JSON.parse('{"title":"mark-magic","description":"","frontmatter":{},"headers":[],"relativePath":"en/index.md","filePath":"en/index.md"}'),n={name:"en/index.md"},l=a('<h1 id="mark-magic" tabindex="-1">mark-magic <a class="header-anchor" href="#mark-magic" aria-label="Permalink to &quot;mark-magic&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>A data connection and transformation tool based on Markdown, solving data conversion between different tools and coordinating between some commonly used tools.</p><p>Some use cases</p><ol><li>Publishing notes online, for example, generating content required by Hexo blog from Joplin note tool for publishing on the web <a href="https://blog.rxliuli.com/" target="_blank" rel="noreferrer">https://blog.rxliuli.com/</a></li><li>Publishing a novel online, for example, generating a novel website from local Markdown files for publication, <a href="https://tts.liuli.moe/" target="_blank" rel="noreferrer">https://tts.liuli.moe/</a></li><li>Packaging a novel into an EPUB file, for example, packaging &quot;To the Stars&quot; into an EPUB for easy offline reading, <a href="https://github.com/liuli-moe/to-the-stars/releases" target="_blank" rel="noreferrer">https://github.com/liuli-moe/to-the-stars/releases</a></li></ol><p>Some previous community use cases</p><ol><li>Joplin =&gt; Hugo to generate a blog</li><li>Joplin =&gt; Jeykll to generate a blog</li><li>There may be others...</li></ol><h2 id="why-not-use-existing-tools" tabindex="-1">Why not use existing tools <a class="header-anchor" href="#why-not-use-existing-tools" aria-label="Permalink to &quot;Why not use existing tools&quot;">​</a></h2><p>I have already used many tools to handle different tasks, but they are all based on Markdown, such as</p><ul><li>Taking notes with Joplin</li><li>Writing blogs with Hexo</li><li>Generating documentation websites with Vitepress</li><li>Generating SEO-friendly novel websites with Docusaurus</li><li>Generating EPUB with Pandoc</li></ul><p>What really annoys me is when using Docusaurus, each novel requires a lot of configuration, which is very annoying. So I hope to have a better out-of-the-box tool.</p><h2 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting started&quot;">​</a></h2><p>Next, two examples are provided</p><ol><li><a href="./book.html">Generating a website and EPUB for a novel</a></li><li><a href="./blog.html">Generating a blog from notes</a></li></ol><p>Thanks to chatgpt, mark-magic now has a lovely mascot.</p><p><img src="'+i+'" alt="cover"></p>',16),r=[l];function s(h,c,d,g,u,m){return o(),t("div",null,r)}const b=e(n,[["render",s]]);export{f as __pageData,b as default};
