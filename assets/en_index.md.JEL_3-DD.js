import{_ as e,c as t,o,R as a,a1 as n}from"./chunks/framework.ZUvglspe.js";const f=JSON.parse('{"title":"mark-magic","description":"","frontmatter":{},"headers":[],"relativePath":"en/index.md","filePath":"en/index.md"}'),i={name:"en/index.md"},l=a('<h1 id="mark-magic" tabindex="-1">mark-magic <a class="header-anchor" href="#mark-magic" aria-label="Permalink to &quot;mark-magic&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>A data connection and transformation tool based on markdown, solving the data transformation between different tools and the coordination between some commonly used tools.</p><p>Some use cases</p><ol><li>Publish some notes on the internet, for example, generate content needed by hexo blogs from the joplin note tool to publish on the internet <a href="https://blog.rxliuli.com/" target="_blank" rel="noreferrer">https://blog.rxliuli.com/</a></li><li>Publish a novel on the internet, for example, generate a novel website from local markdown files to publish, <a href="https://tts.liuli.moe/" target="_blank" rel="noreferrer">https://tts.liuli.moe/</a></li><li>Package the novel into epub files, for example, package To the Stars into epub, for offline reading after download, <a href="https://github.com/liuli-moe/to-the-stars/releases" target="_blank" rel="noreferrer">https://github.com/liuli-moe/to-the-stars/releases</a></li></ol><p>Some previous community use cases</p><ol><li>joplin =&gt; hugo generates a blog</li><li>joplin =&gt; jeykll generates a blog</li><li>There may be others...</li></ol><h2 id="why-not-use-existing-tools" tabindex="-1">Why not use existing tools <a class="header-anchor" href="#why-not-use-existing-tools" aria-label="Permalink to &quot;Why not use existing tools&quot;">​</a></h2><p>We have already used many tools to handle different tasks, but they are all based on markdown, for example</p><ul><li>Use joplin to record notes</li><li>Use hexo to write blogs</li><li>Use vitepress to generate documentation sites</li><li>Use docusaurus to generate SEO friendly novel websites</li><li>Use pandoc to generate epub</li></ul><p>What really pains us is that when using docusaurus, each novel needs to configure a bunch of things, which is very annoying, so we hope there is a better out-of-the-box tool.</p><h2 id="get-started" tabindex="-1">Get Started <a class="header-anchor" href="#get-started" aria-label="Permalink to &quot;Get Started&quot;">​</a></h2><p>Next, two examples are given</p><ol><li><a href="./book.html">Generate websites and epub electronic files for novels</a></li><li><a href="./blog.html">Generate blogs from notes</a></li></ol><p>Thanks to chatgpt, now mark-magic has a kanban girl.</p><p><img src="'+n+'" alt="cover"></p>',16),r=[l];function s(h,c,d,m,u,p){return o(),t("div",null,r)}const b=e(i,[["render",s]]);export{f as __pageData,b as default};
