import{_ as s,c as a,o as i,R as e}from"./chunks/framework.ZUvglspe.js";const g=JSON.parse('{"title":"plugin-hexo","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugin/plugin-hexo.md","filePath":"en/plugin/plugin-hexo.md"}'),t={name:"en/plugin/plugin-hexo.md"},n=e(`<h1 id="plugin-hexo" tabindex="-1">plugin-hexo <a class="header-anchor" href="#plugin-hexo" aria-label="Permalink to &quot;plugin-hexo&quot;">​</a></h1><p>An output plugin that exports to hexo&#39;s markdown files, while maintaining the correct links between blog posts and references to resources.</p><h2 id="output" tabindex="-1">output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;output&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tasks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@mark-magic/plugin-hexo&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span></span></code></pre></div><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><p>The root path of the output, by default it is the current command line path, usually no configuration is needed.</p><h3 id="base" tabindex="-1">base <a class="header-anchor" href="#base" aria-label="Permalink to &quot;base&quot;">​</a></h3><p>The root path of the output, by default is <code>/</code>, usually no configuration is needed. If your blog is not deployed at the root path, it can be configured to <code>/blog/</code>, etc.</p><p>For example, if your blog is deployed on GitHub Pages, and it is not bound to a domain, the default path after publishing is <code>https://&lt;username&gt;.github.io/&lt;repo&gt;/</code>, so here it should be configured to <code>/repo/</code>.</p>`,9),h=[n];function l(p,o,r,d,k,u){return i(),a("div",null,h)}const E=s(t,[["render",l]]);export{g as __pageData,E as default};
