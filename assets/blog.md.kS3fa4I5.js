import{_ as s,o as i,c as a,R as n}from"./chunks/framework.UjU5Kp2a.js";const E=JSON.parse('{"title":"笔记 => 博客","description":"","frontmatter":{},"headers":[],"relativePath":"blog.md","filePath":"blog.md"}'),l={name:"blog.md"},e=n(`<h1 id="笔记-博客" tabindex="-1">笔记 =&gt; 博客 <a class="header-anchor" href="#笔记-博客" aria-label="Permalink to &quot;笔记 =&gt; 博客&quot;">​</a></h1><blockquote><p><a href="./book.html#必要条件">必要条件</a></p></blockquote><h2 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h2><blockquote><p>下面使用 <a href="https://joplinapp.org/" target="_blank" rel="noreferrer">joplin</a> 作为笔记工具，<a href="https://hexo.io/" target="_blank" rel="noreferrer">hexo</a> 作为博客进行说明，假设读者已经知道了两者。</p></blockquote><ol><li>首先，确保 joplin 已经开启了 <a href="https://joplinapp.org/help/apps/clipper/" target="_blank" rel="noreferrer">web clipper service</a>。</li><li>其次，需要一个 hexo 项目，如果已有，则直接在该目录操作，否则重新创建一个</li></ol><h2 id="新建-hexo-项目" tabindex="-1">新建 hexo 项目 <a class="header-anchor" href="#新建-hexo-项目" aria-label="Permalink to &quot;新建 hexo 项目&quot;">​</a></h2><p>按照 <a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noreferrer">官方教程</a> 初始化一个简单的项目。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">folde</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">folde</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="连接-joplin" tabindex="-1">连接 joplin <a class="header-anchor" href="#连接-joplin" aria-label="Permalink to &quot;连接 joplin&quot;">​</a></h2><ol><li><p>安装依赖 <code>npm i -D @mark-magic/cli @mark-magic/plugin-joplin @mark-magic/plugin-hexo</code></p></li><li><p>添加配置 <code>mark-magic.config.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mark-magic.config.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tasks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">blog</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@mark-magic/plugin-joplin&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 输入插件，从 joplin 笔记中读取数据</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        baseUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://localhost:27583&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # joplin web clipper service 的地址，一般是 http://localhost:41184，这里演示使用了开发时的 http://localhost:27583</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;5bcfa49330788dd68efea27a0a133d2df24df68c3fd78731eaa9914ef34811a34a782233025ed8a651677ec303de6a04e54b57a27d48898ff043fd812d8e0b31&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # joplin web clipper service 的 token</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">blog</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 根据标签过滤笔记</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@mark-magic/plugin-hexo&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 输出插件，生成 hexo 需要的文件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # hexo 项目的根目录</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/joplin-hexo-demo/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 部署时的 baseUrl，默认部署在域的根路径，应该与 hexo _config.yml 中的 root 配置保持一致</span></span></code></pre></div></li><li><p>修改 hexo 的配置 <code>_config.yml</code>，如果包含</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">permalink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:abbrlink/</span></span></code></pre></div></li><li><p>修改 .gitignore，忽略自动生成的 <code>source/_posts</code> 和 <code>source/resources</code> 目录</p><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>source/_posts</span></span>
<span class="line"><span>source/resources</span></span></code></pre></div></li><li><p>从 joplin 读取笔记生成 hexo blog 所需要的文件</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mark-magic</span></span></code></pre></div></li></ol><p>完成后你可以在 <code>source/_posts</code> 和 <code>source/resources</code> 目录看到生成的文件，现在可以继续使用 hexo 构建和发布了。</p><h2 id="构建与发布-hexo-博客" tabindex="-1">构建与发布 hexo 博客 <a class="header-anchor" href="#构建与发布-hexo-博客" aria-label="Permalink to &quot;构建与发布 hexo 博客&quot;">​</a></h2><p>先在本地查看一下预览。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span></span></code></pre></div><p>然后可以构建并发布到 GitHub Pages 了。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gh-pages</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 构建静态文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gh-pages</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dotfiles</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 发布到 GitHub Pages</span></span></code></pre></div><p>等待 GitHub Actions 完成，可以在 <code>https://github.com/&lt;username&gt;/[repo]/actions</code> 查看进度。</p><p>一切完成后，应该可以看到站点被部署在 <code>https://&lt;username&gt;.github.io/&lt;repo&gt;/</code> 或 <code>https://&lt;custom-domain&gt;/</code>，具体取决于设置。</p>`,18),p=[e];function h(t,k,o,r,d,c){return i(),a("div",null,p)}const y=s(l,[["render",h]]);export{E as __pageData,y as default};
